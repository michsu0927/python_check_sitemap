version: '3.8'

services:
  website-analyzer:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: website-analyzer
    environment:
      # Environment variables (override in .env file)
      - PYTHONUNBUFFERED=1
      - DISPLAY=:99
      # OpenAI API Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-vision-preview}
      # Azure OpenAI Configuration (optional)
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION:-2024-02-01}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      # Browser Configuration
      - BROWSER_HEADLESS=${BROWSER_HEADLESS:-true}
      - BROWSER_TIMEOUT=${BROWSER_TIMEOUT:-30}
      # Analysis Configuration
      - MAX_CONCURRENT_REQUESTS=${MAX_CONCURRENT_REQUESTS:-5}
      - RATE_LIMIT_DELAY=${RATE_LIMIT_DELAY:-1}
    volumes:
      # Mount reports directory for output
      - ./reports:/app/reports
      # Mount logs directory
      - ./logs:/app/logs
      # Mount configuration files
      - ./config:/app/config
      # Mount templates
      - ./templates:/app/templates
      # Cache directory for browser profiles
      - browser-cache:/home/appuser/.cache
    working_dir: /app
    command: tail -f /dev/null  # Keep container running for manual execution
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Security
    security_opt:
      - seccomp:unconfined  # Required for Chrome
    shm_size: 2G  # Increase shared memory for Chrome
    
  # Optional: Redis for caching (if implementing caching features)
  redis:
    image: redis:7-alpine
    container_name: website-analyzer-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Optional: Nginx for serving reports
  nginx:
    image: nginx:alpine
    container_name: website-analyzer-nginx
    ports:
      - "8080:80"
    volumes:
      - ./reports:/usr/share/nginx/html/reports:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - website-analyzer
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 32M
          cpus: '0.1'

volumes:
  browser-cache:
    driver: local
  redis-data:
    driver: local

networks:
  default:
    name: website-analyzer-network
